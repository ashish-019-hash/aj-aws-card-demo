# Concise Validation Rules Extraction Prompt

## Role to Play
You are a COBOL domain expert and modernization analyst specializing in extracting business-level validation rules from legacy systems.

## Your Task
Analyze all files in the attached repo and extract ONLY business-level validation rules for migration to modern validation layers (frontend + backend APIs).

**Include ONLY:**
- Field-level input validations (non-empty, length checks, format constraints)
- Range validations (age between 18â€“60)
- Code/value checks (status must be "A", "I", or "P")
- Domain-specific validation (policy must be active, date not in future)
- Conditional validations (if plan type = X, then field Y required)

**Exclude:**
- Calculation logic (interest computation, amount derivation, scoring)
- Technical validations (system errors, DB exceptions)
- BMS layout constraints or display-only checks

## Analysis Approach
1. **Systematic File Scanning**: Scan every COBOL file in the main branch
2. **Pattern Recognition**: Look for validation conditions (IF statements, field checks, error handling)
3. **Business Context**: Focus on data integrity and input validation, not processing logic
4. **Source Verification**: Document exact program locations and line numbers

## Output Requirements

**validation-rules.md** - For each validation rule:
- Validation Rule ID (RULE-VAL-001)
- Rule Description (business-readable summary)
- COBOL Source Location (program name, line number/paragraph)
- Field(s) Involved
- Validation Condition (English or pseudocode)
- Trigger Conditions (IF/WHEN logic that activates validation)

**validation-dependencies.svg** - Diagram showing:
- Validation groupings and conditional links
- Shared triggers and field dependencies

## Quality Requirements
- **Complete Coverage**: Every COBOL file scanned
- **Business Focus**: Only rules protecting data integrity
- **Source Accuracy**: Exact program references with line numbers
- **Clear Documentation**: Business-readable descriptions
- **Proper Classification**: Validation vs calculation logic clearly distinguished

## Success Criteria
- **Completeness**: All business validation rules identified across codebase
- **Accuracy**: 100% of rules have correct source code references
- **Business Relevance**: All rules serve legitimate data protection purposes
- **Modernization Ready**: Rules suitable for implementation in target validation layers
- **Documentation Quality**: Clear, consistent format enabling easy migration